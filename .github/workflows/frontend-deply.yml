name: “frontend-docker-build”

on:
  push:
    branches: [ “dev-fe” ]
    
jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # 노드 버전 설정 및 의존성 설치
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.17.1'

      - name: Corepack Enable
        run: corepack enable

      - name: Install Dependencies
        run: yarn install

      - name: Build
        run: |
          cd packages/frontend
          yarn build

  docker:
    name: Deploy Docker Image
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./packages/frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/git-challenge-frontend:0.1

  deploy:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: SSH and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.BACKEND_SSH_HOST }}
          username: ${{ secrets.BACKEND_SSH_USERNAME }}
          password: ${{ secrets.BACKEND_SSH_PASSWORD }}
          port: ${{ secrets.BACKEND_SSH_PORT }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/git-challenge-frontend:0.1
            docker rm -f frontend || true
            docker run -d --name frontend -p 3000:3000 \
              -e ${{ secrets.NEXT_PUBLIC_API_HOST }} \
              ${{ secrets.DOCKERHUB_USERNAME }}/git-challenge-frontend:0.1